<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.9.1 -->
<document source="/home/meoki/.vim/bundle/riv.vim/README.rst"><section ids="riv-instruction" names="riv\ instruction"><title>Riv Instruction</title><field_list><field><field_name>Author</field_name><field_body><paragraph>Rykka G.Forest</paragraph></field_body></field><field><field_name>Date</field_name><field_body><paragraph>2012-06-29 10:38:56</paragraph></field_body></field><field><field_name>Version</field_name><field_body><paragraph>0.66</paragraph></field_body></field><field><field_name>Github</field_name><field_body><paragraph><reference refuri="https://github.com/Rykka/riv.vim">https://github.com/Rykka/riv.vim</reference></paragraph></field_body></field></field_list><paragraph><strong>Riv</strong> is a vim plugin for managing and writing <reference name="reStructuredText" refuri="http://docutils.sourceforge.net/rst.html">reStructuredText</reference> documents.
Short for 'reStructuredText in Vim'.</paragraph><paragraph>It is for people either want to manage documents in a wiki way,
or writing reStructuredText documents in an easy way.</paragraph><target ids="restructuredtext" names="restructuredtext" refuri="http://docutils.sourceforge.net/rst.html"></target><section ids="features" names="features"><title>Features</title><paragraph>These features are for all reStructuredText files.</paragraph><field_list><field><field_name><reference name="Sections" refid="sections">Sections</reference></field_name><field_body><paragraph>Section level and section number auto detected.</paragraph></field_body></field><field><field_name><reference name="Lists" refid="lists">Lists</reference></field_name><field_body><paragraph>Auto Numbered and auto leveled bullet and enumerated list.</paragraph></field_body></field><field><field_name><reference name="Links" refid="links">Links</reference></field_name><field_body><paragraph>Jumping with links.</paragraph></field_body></field><field><field_name><reference name="Table" refid="table">Table</reference></field_name><field_body><paragraph>Auto formatted table.</paragraph></field_body></field><field><field_name><reference name="Folding" refid="folding">Folding</reference></field_name><field_body><paragraph>Fold document by document structures (Section/List/Block).</paragraph></field_body></field><field><field_name><reference name="Indent" refid="indent">Indent</reference></field_name><field_body><paragraph>Improved indentation</paragraph></field_body></field><field><field_name><reference name="Insert" refid="insert">Insert</reference></field_name><field_body><paragraph>Improvment of some mapping in insert mode.</paragraph></field_body></field><field><field_name><reference name="Highlighting" refid="highlighting">Highlighting</reference></field_name><field_body><paragraph>Improved syntax file.</paragraph></field_body></field></field_list><paragraph>These features are for the Riv Project.</paragraph><field_list><field><field_name><reference name="Project" refid="project">Project</reference></field_name><field_body><paragraph>Manage your reStructuredText documents in a wiki way.</paragraph></field_body></field><field><field_name><reference name="File" refid="file">File</reference></field_name><field_body><paragraph>Links to local file in rst documents.</paragraph></field_body></field><field><field_name><reference name="Scratch" refid="scratch">Scratch</reference></field_name><field_body><paragraph>A place for writing diary or hold idea and thoughts.</paragraph></field_body></field><field><field_name><reference name="Todos" refid="todos">Todos</reference></field_name><field_body><paragraph>Writing todo lists in reStructuredText documents .</paragraph></field_body></field><field><field_name><reference name="Helpers" refid="helpers">Helpers</reference></field_name><field_body><paragraph>A help window for showing and doing something.</paragraph><bullet_list bullet="+"><list_item><paragraph><reference name="Todo Helper" refid="todo-helper">Todo Helper</reference>: Managing todo items of project.</paragraph></list_item></bullet_list></field_body></field><field><field_name><reference name="Publish" refid="publish">Publish</reference></field_name><field_body><paragraph>some wrapper to convert rst files to html/xml/latex/odt/...
(require python docutils package )</paragraph></field_body></field></field_list><bullet_list bullet="*"><list_item><paragraph>Take a glance</paragraph></list_item></bullet_list><image uri="http://i.minus.com/jCFTijpr6oqYt.jpg"></image><bullet_list bullet="*"><list_item><paragraph>To Start: see <reference name="Instruction Details" refid="instruction-details">Instruction Details</reference></paragraph></list_item></bullet_list></section><section ids="install" names="install"><title>Install</title><bullet_list bullet="*"><list_item><paragraph>Using <reference name="Vundle" refuri="www.github.com/gmarik/vundle">Vundle</reference>  (Recommend)</paragraph><paragraph>Add this line to your vimrc:</paragraph><literal_block xml:space="preserve">Bundle 'Rykka/riv.vim'</literal_block></list_item></bullet_list><target ids="vundle" names="vundle" refuri="www.github.com/gmarik/vundle"></target><bullet_list bullet="*"><list_item><paragraph>Using downloaded file.
Just extract to your <literal>.vim</literal> folder .</paragraph></list_item></bullet_list><field_list><field><field_name>NOTE</field_name><field_body><paragraph>Make sure the your .vim folder in option <literal>runtimepath</literal>
is before the $VIMRUNTIME.</paragraph><paragraph>Otherwise the syntax/indent files for rst file will using the vim built-in one.</paragraph></field_body></field></field_list><bullet_list bullet="*"><list_item><paragraph>Recommend plugins:</paragraph><bullet_list bullet="+"><list_item><paragraph><reference name="Syntastic" refuri="https://github.com/scrooloose/syntastic">Syntastic</reference>  for syntax checking of rst files.
(require python docutils package )</paragraph><target ids="syntastic" names="syntastic" refuri="https://github.com/scrooloose/syntastic"></target></list_item><list_item><paragraph><reference name="Calendar" refuri="https://github.com/mattn/calendar-vim">Calendar</reference> setting datestamp easier.</paragraph><target ids="calendar" names="calendar" refuri="https://github.com/mattn/calendar-vim"></target></list_item></bullet_list></list_item></bullet_list></section><section ids="issues" names="issues"><title>Issues</title><bullet_list bullet="*"><list_item><paragraph>Currently it's a developing version. So things may change quickly.
keep up-to-date.</paragraph></list_item><list_item><paragraph>Both bug reports and feature request are welcome.
Please Post issues at <reference refuri="https://github.com/Rykka/riv.vim/issues">https://github.com/Rykka/riv.vim/issues</reference></paragraph></list_item></bullet_list></section><section ids="todo" names="todo"><title>Todo</title><section ids="prev" names="prev"><title>Prev</title><paragraph>See Changelog in doc/riv.txt</paragraph><bullet_list bullet="*"><list_item><paragraph>0.65:</paragraph><bullet_list bullet="+"><list_item><paragraph>DONE 2012-06-27 take care of the slash of directory in windows .</paragraph></list_item><list_item><paragraph>FIXED 2012-06-28 correct cursor position when creating todo items and list items.</paragraph></list_item><list_item><paragraph>FIXED 2012-06-28 link highlight group removed after open another buffer.</paragraph></list_item><list_item><paragraph>FIXED 2012-06-28 auto mkdir when write file to disk</paragraph></list_item><list_item><paragraph>DONE 2012-06-28 format the scratch index, sort with year/month/day</paragraph></list_item></bullet_list></list_item></bullet_list></section><section ids="this" names="this"><title>This</title><paragraph>Things todo in this version.</paragraph><bullet_list bullet="*"><list_item><paragraph>0.66:</paragraph><field_list><field><field_name><reference name="Todos" refid="todos">Todos</reference></field_name><field_body><paragraph>DONE 2012-06-29 add field list for todo items.</paragraph></field_body></field><field><field_name><reference name="Indent" refid="indent">Indent</reference></field_name><field_body><paragraph>DONE 2012-06-29 the indentation in directives should return 0 after
2 blank lines</paragraph></field_body></field><field><field_name><reference name="Todos" refid="todos">Todos</reference></field_name><field_body><paragraph>FIXME the calculation of child todo items</paragraph></field_body></field><field><field_name><reference name="Indent" refid="indent">Indent</reference></field_name><field_body><paragraph>FIXME <literal>&lt;BS&gt;</literal> indentation to reach the begin of field list.</paragraph></field_body></field></field_list></list_item></bullet_list></section><section ids="next" names="next"><title>Next</title><paragraph>Things todo in next versions.</paragraph><field_list><field><field_name><reference name="Links" refid="links">Links</reference></field_name><field_body><paragraph>The standalone web link with <literal>/</literal> is detected as local file.</paragraph></field_body></field><field><field_name><reference name="File" refid="file">File</reference></field_name><field_body><paragraph>A template or snippet or shortcut for adding <literal>./</literal> and <literal>../</literal> and files.
Maybe a sphinx doc ref as well.</paragraph></field_body></field><field><field_name><reference name="Documents" refid="riv-instruction">Documents</reference></field_name><field_body><paragraph>Document part: options / commands.</paragraph></field_body></field><field><field_name><reference name="Documents" refid="riv-instruction">Documents</reference></field_name><field_body><paragraph>Sreencast and screenshot of intro.</paragraph></field_body></field><field><field_name><reference name="Documents" refid="riv-instruction">Documents</reference></field_name><field_body><paragraph>Seperate instruction and intro. help use instruction.rst</paragraph></field_body></field><field><field_name><reference name="Documents" refid="riv-instruction">Documents</reference></field_name><field_body><paragraph>Add Specification/Intro of reStructuredText.</paragraph></field_body></field><field><field_name><reference name="Publish" refid="publish">Publish</reference></field_name><field_body><paragraph>An option to enable highlighting todo items.</paragraph></field_body></field><field><field_name><reference name="Helpers" refid="helpers">Helpers</reference></field_name><field_body><paragraph>An option Helper and option cache.
Let people use it even without touching <literal>.vimrc</literal> .</paragraph></field_body></field><field><field_name><reference name="Scratch" refid="scratch">Scratch</reference></field_name><field_body><paragraph>Show Scratch sign in Calendar.</paragraph></field_body></field><field><field_name><reference name="Publish" refid="publish">Publish</reference></field_name><field_body><paragraph>Support the reStructuredText document not in a project.</paragraph></field_body></field><field><field_name><reference name="Helpers" refid="helpers">Helpers</reference></field_name><field_body><paragraph>A command helper?</paragraph></field_body></field><field><field_name><reference name="Links" refid="links">Links</reference></field_name><field_body><paragraph>Link tags infile ?</paragraph></field_body></field><field><field_name><reference name="Todos" refid="todos">Todos</reference></field_name><field_body><paragraph>Todo item priorities?</paragraph></field_body></field><field><field_name><reference name="Table" refid="table">Table</reference></field_name><field_body><paragraph>Support simple table format?</paragraph></field_body></field><field><field_name><reference name="Table" refid="table">Table</reference></field_name><field_body><paragraph>Support column span?</paragraph></field_body></field><field><field_name><reference name="Table" refid="table">Table</reference></field_name><field_body><paragraph>A vim table parser for compatible?</paragraph></field_body></field><field><field_name><reference name="Table" refid="table">Table</reference></field_name><field_body><paragraph>A shortcut or command to create table with row * col.</paragraph></field_body></field><field><field_name><reference name="Sections" refid="sections">Sections</reference></field_name><field_body><paragraph>Adjust section level.</paragraph></field_body></field><field><field_name><reference name="Sections" refid="sections">Sections</reference></field_name><field_body><paragraph>Shortcut to add sections like the content directive?</paragraph></field_body></field><field><field_name><reference name="Folding" refid="folding">Folding</reference></field_name><field_body><paragraph>A buf parser write in python for performance?</paragraph></field_body></field></field_list><target ids="documents" names="documents" refid="riv-instruction"></target></section></section></section><transition></transition><section ids="instruction-details" names="instruction\ details"><title>Instruction Details</title><bullet_list bullet="*"><list_item><paragraph>How to use?</paragraph><bullet_list bullet="+"><list_item><paragraph>For writing reStructuredText documents in an easy way.</paragraph><paragraph>When editing an reStructuredText document (<literal>*.rst</literal> ),
these settings will be automatically on.
(make sure <literal>filetype on</literal> in your vimrc)</paragraph></list_item><list_item><paragraph>For managing documents in a wiki way, you should setup a project first,
see <reference name="Project" refid="project">Project</reference>.</paragraph></list_item></bullet_list></list_item><list_item><paragraph>About the mapping</paragraph><paragraph>Default leader map for Riv is <literal>&lt;C-E&gt;</literal>.
You can change it by following options.</paragraph><bullet_list bullet="+"><list_item><paragraph><literal>g:riv_global_leader</literal> : leader map for Riv global mapping.</paragraph><bullet_list bullet="-"><list_item><paragraph><literal>:RivIndex</literal> <literal>&lt;C-E&gt;ww</literal> to open the project index.</paragraph></list_item><list_item><paragraph><literal>:RivAsk</literal> <literal>&lt;C-E&gt;wa</literal> to choose one project to open.</paragraph></list_item><list_item><paragraph><literal>:RivScratchCreate</literal> <literal>&lt;C-E&gt;cc</literal> Create or jump to the scratch of today.</paragraph></list_item><list_item><paragraph><literal>:RivScratchView</literal> <literal>&lt;C-E&gt;cv</literal> View Scratch index.</paragraph></list_item></bullet_list></list_item><list_item><paragraph><literal>g:riv_buf_leader</literal> : leader map for reStructuredText buffers.</paragraph></list_item><list_item><paragraph><literal>g:riv_buf_ins_leader</literal> : leader map for reStructuredText buffers's insert mode.</paragraph></list_item></bullet_list></list_item></bullet_list><section ids="for-restructuredtext" names="for\ restructuredtext"><title>For reStructuredText</title><paragraph>These features are for all reStructuredText files.</paragraph><section ids="sections" names="sections"><title>Sections</title><paragraph>Section levels and numbers are auto detected.</paragraph><paragraph>The section number will be shown when folded.</paragraph><paragraph>Pressing <literal>&lt;Enter&gt;</literal> or double clicking on section title will toggle the folding
of the section.</paragraph><paragraph>Clicking on the section reference will bring you to the section title.</paragraph><block_quote><paragraph>e.g. <reference name="Features" refid="features">Features</reference> link will bring you to the <title_reference>Feature</title_reference> Section (in vim)</paragraph></block_quote><bullet_list bullet="*"><list_item><paragraph>Create Section Title:</paragraph><paragraph>Normal and Insert:</paragraph><bullet_list bullet="+"><list_item><paragraph>Use <literal>:RivTitle1</literal> <literal>&lt;C-E&gt;s1</literal> ...  <literal>:RivTitle6</literal> <literal>&lt;C-E&gt;s6</literal> ,
To create level 1 to level 6 section title from current word.</paragraph><paragraph>If it's empty, you will be asked to input one.</paragraph></list_item></bullet_list></list_item></bullet_list><field_list><field><field_name>NOTE</field_name><field_body><paragraph>Although you can define a section title with most punctuations.</paragraph><paragraph>Riv use following punctuations for titles:</paragraph><paragraph><strong>=-~"'`</strong> , you can change it with <literal>g:riv_section_levels</literal></paragraph></field_body></field></field_list></section><section ids="lists" names="lists"><title>Lists</title><paragraph>Auto numbered and auto leveled bullet and enumerated list.</paragraph><paragraph>The Sequence of the list level is:</paragraph><block_quote><paragraph><literal>* + - 1. A. a. I. i. 1) A) a) I) i) (1) (A) (a) (I) (i)</literal></paragraph></block_quote><bullet_list bullet="*"><list_item><paragraph>Editing Lists:</paragraph><paragraph>Normal and Visual:</paragraph><bullet_list bullet="+"><list_item><paragraph><literal>&gt;</literal> or <literal>&lt;C-ScrollWheelDown&gt;</literal>
Add Indentation, And add a level for list.</paragraph><paragraph>if the first item is a list , the indentation is based on the list item.
otherwise the indentation is based on <literal>'shiftwidth'</literal>.</paragraph></list_item><list_item><paragraph><literal>&lt;</literal> or <literal>&lt;C-ScrollWheelUp&gt;</literal>
Remove Indentation, And remove a level for list.</paragraph></list_item></bullet_list><paragraph>Insert Mode Only:</paragraph><bullet_list bullet="+"><list_item><paragraph><literal>&lt;CR&gt;\&lt;KEnter&gt;</literal> (enter key and keypad enter key)
Insert the content of this list.</paragraph><paragraph>To insert content in new line of this list item. add a blank line before it.</paragraph></list_item><list_item><paragraph><literal>&lt;C-CR&gt;\&lt;C-KEnter&gt;</literal>
Insert a new list of current list level</paragraph></list_item><list_item><paragraph><literal>&lt;S-CR&gt;\&lt;S-KEnter&gt;</literal>
Insert a new list of current child list level</paragraph></list_item><list_item><paragraph><literal>&lt;C-S-CR&gt;\&lt;C-S-KEnter&gt;</literal>
Insert a new list of current parent list level</paragraph></list_item></bullet_list><paragraph>Normal and Insert:</paragraph><bullet_list bullet="+"><list_item><paragraph><literal>:RivListTypeNext</literal> <literal>&lt;C-E&gt;l1</literal>
Change current list item symbol to next type</paragraph></list_item><list_item><paragraph><literal>:RivListTyePrev</literal> <literal>&lt;C-E&gt;l2</literal>
Change current list item symbol to prev type</paragraph></list_item><list_item><paragraph><literal>:RivListTypeRemove</literal> <literal>&lt;C-E&gt;lx</literal>
Delete current list item symbol</paragraph></list_item></bullet_list></list_item></bullet_list><field_list><field><field_name>NOTE</field_name><field_body><paragraph>To contain a second paragraph (or blocks) in a list , you should make the left edge
lines up with the main paragraph.</paragraph><paragraph>See <reference anonymous="1" name="reStructuredText Bullet Lists" refuri="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#bullet-lists">reStructuredText Bullet Lists</reference></paragraph></field_body></field></field_list><target anonymous="1" ids="id1" refuri="http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#bullet-lists"></target></section><section ids="links" names="links"><title>Links</title><paragraph>Clicking on links will executing it's default behavior
(open browser/edit file/jump to internal target)</paragraph><paragraph><literal>&lt;Tab&gt;/&lt;S-Tab&gt;</literal> in Normal mode will jump to next/prev link.</paragraph><bullet_list bullet="*"><list_item><paragraph>Create Links:</paragraph><paragraph>Normal Mode Only :</paragraph><bullet_list bullet="+"><list_item><paragraph><literal>:RivCreateLink</literal> <literal>&lt;C-E&gt;il</literal>
create a link from current word.</paragraph><paragraph>If it's empty, you will be asked to input one.</paragraph></list_item><list_item><paragraph><literal>:RivCreateFoot</literal> <literal>&lt;C-E&gt;if</literal>
create a auto numbered footnote.
And append the footnote target to the end of file.</paragraph></list_item></bullet_list></list_item></bullet_list></section><section ids="table" names="table"><title>Table</title><paragraph>Auto Format Table (Grid Table Only).
(Currently require vim compiled with python. )</paragraph><paragraph>When folded, the numbers of rows and columns will be shown.</paragraph><paragraph>Currently only Support the Grid Table with equal columns each row .</paragraph><paragraph>Insert Mode Only:</paragraph><paragraph>To create a table , just insert <literal>| xxx |</literal> and press <literal>&lt;Enter&gt;</literal>.</paragraph><table><tgroup cols="2"><colspec colwidth="17"></colspec><colspec colwidth="59"></colspec><thead><row><entry><paragraph>The Grid Table</paragraph></entry><entry><paragraph>Will be Auto Formatted after Leave Insert Mode</paragraph></entry></row></thead><tbody><row><entry><paragraph>Lines</paragraph></entry><entry><bullet_list bullet="-"><list_item><paragraph>&lt;Enter&gt; in column to add a new line of column</paragraph></list_item><list_item><paragraph>This is the second line of in same row of table.</paragraph></list_item></bullet_list></entry></row><row><entry><paragraph>Rows</paragraph></entry><entry><paragraph>&lt;Enter&gt; in seperator to add a new row</paragraph></entry></row><row><entry><paragraph>Cells</paragraph></entry><entry><paragraph>&lt;Tab&gt; and &lt;S-Tab&gt; in table will switch to next/prev cell</paragraph></entry></row></tbody></tgroup></table></section><section ids="folding" names="folding"><title>Folding</title><paragraph>Fold reStructuredText file with sections, lists, and blocks automatically.</paragraph><paragraph>When folded, some info of the item will be shown at the foldline.</paragraph><paragraph>Folding will be updated after you write buffer to file.</paragraph><paragraph>Pressing <literal>&lt;Enter&gt;</literal> or double clicking on folded lines will open that fold.</paragraph><bullet_list bullet="*"><list_item><paragraph>Update Folding: use <literal>zx</literal> or <literal>&lt;C-E&gt;&lt;Space&gt;j</literal></paragraph></list_item><list_item><paragraph>Toggle Folding: use <literal>za</literal> or <literal>&lt;C-E&gt;&lt;Space&gt;&lt;Space&gt;</literal></paragraph></list_item><list_item><paragraph>Toggle all Folding: use <literal>zA</literal> or <literal>&lt;C-E&gt;&lt;Space&gt;m</literal></paragraph></list_item></bullet_list><paragraph>To show the blank lines in the end of a folding, use <literal>g:riv_fold_blank</literal>.</paragraph><block_quote><bullet_list bullet="+"><list_item><paragraph>when set to 2 , will fold all blank lines.</paragraph></list_item><list_item><paragraph>when set to 1 , will fold all blank lines,
but showing one blank line if there are some.</paragraph></list_item><list_item><paragraph>when set to 0 , will fold one blank line ,
but will showing the rest.</paragraph></list_item><list_item><paragraph>default is 2</paragraph></list_item></bullet_list></block_quote><paragraph>For large files. calculate folding may cost time.
So there are some options about it.</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>g:riv_fold_level</literal> set which structures to be fold.</paragraph><bullet_list bullet="+"><list_item><paragraph>when set to 3 , means 'sections,lists and blocks'.</paragraph></list_item><list_item><paragraph>when set to 2 , means 'sections and lists'</paragraph></list_item><list_item><paragraph>when set to 1 , means 'sections'</paragraph></list_item><list_item><paragraph>when set to 0 , means 'None'</paragraph></list_item><list_item><paragraph>default is 3.</paragraph></list_item></bullet_list></list_item><list_item><paragraph><literal>g:riv_auto_fold_force</literal>, enable reducing fold level when editing large files.</paragraph><bullet_list bullet="+"><list_item><paragraph>when set to 1 , means 'On'.</paragraph></list_item><list_item><paragraph>default is 1.</paragraph></list_item></bullet_list></list_item><list_item><paragraph><literal>g:riv_auto_fold1_lines</literal>, the minimum lines file containing,
to force set fold_level to section only.</paragraph><paragraph>default is 5000.</paragraph></list_item><list_item><paragraph><literal>g:riv_auto_fold2_lines</literal>, the minimum lines file containing,
to force set fold_level to section and list only.</paragraph><paragraph>default is 3000.</paragraph></list_item></bullet_list><paragraph>To set an initial folding level for a file . you can use <literal>modeline</literal>:</paragraph><literal_block xml:space="preserve">..  vim: fdl=0 :
    This means all fold will be folded when opening files</literal_block></section><section ids="highlighting" names="highlighting"><title>Highlighting</title><paragraph>Improved syntax file.</paragraph><bullet_list bullet="*"><list_item><paragraph>Lists Highlightings</paragraph></list_item><list_item><paragraph>Code Block syntax highlighting:</paragraph><literal_block xml:space="preserve">.. code:: python

    # python highlighting
    # github does not support syntax highlighting for rst file yet.
    x = [0 for i in range(100)]</literal_block><paragraph>You can use <literal>g:riv_highlight_code</literal> to set which type of code to highlight.
default is <literal>lua,python,cpp,javascript,vim,sh</literal></paragraph><field_list><field><field_name>NOTE</field_name><field_body><paragraph>To enable highlighting in converted file,
python <literal>pygments</literal> package must installed for <literal>docutils</literal>
parsing syntax highlighting.</paragraph><paragraph>see <reference refuri="http://docutils.sourceforge.net/sandbox/code-block-directive/tools/pygments-enhanced-front-ends/">http://docutils.sourceforge.net/sandbox/code-block-directive/tools/pygments-enhanced-front-ends/</reference></paragraph></field_body></field></field_list></list_item><list_item><paragraph>The links under cursor are highlighted.
Disable it by set <literal>g:riv_hover_link_hl</literal> to 0</paragraph></list_item></bullet_list></section><section ids="indent" names="indent"><title>Indent</title><paragraph>Improved indent file.</paragraph><paragraph>In Insert mode , when starting a newline or</paragraph><bullet_list bullet="*"><list_item><paragraph>starting newline (<literal>&lt;Enter&gt;</literal> or <literal>o</literal> in Normal mode):
will start newline with correct indentation</paragraph></list_item><list_item><paragraph><literal>&lt;BS&gt;</literal> (BackSpace key).
will goto correct indentation if no preceding non-whitespace character
and after the indentation's <literal>&amp;shiftwidth</literal> position , otherwise <literal>&lt;BS&gt;</literal></paragraph></list_item></bullet_list></section><section ids="insert" names="insert"><title>Insert</title><paragraph>Improvment for some mapping in insert mode. Detail in each section.</paragraph><paragraph>Also most shortcut can be used in insert mode. like <literal>&lt;C-E&gt;ee</literal> <literal>&lt;C-E&gt;s1</literal> ...</paragraph><bullet_list bullet="*"><list_item><paragraph>Enter: Insert <reference name="lists" refid="lists">lists</reference> with <literal>&lt;C-Enter&gt;</literal> , <literal>&lt;S-Enter&gt;</literal> and <literal>&lt;C-S-Enter&gt;</literal>.</paragraph><paragraph>When in a <reference name="table" refid="table">table</reference>, <literal>&lt;Enter&gt;</literal> to create a new line</paragraph><paragraph>When not in a table, will start new line with correct indentation</paragraph></list_item><list_item><paragraph>Tab:  When in a table , <literal>&lt;Tab&gt;</literal> to next cell , <literal>&lt;S-Tab&gt;</literal> to previous one.</paragraph><paragraph>When not in a table , will act as <literal>&lt;C-N&gt;</literal> or <literal>&lt;C-P&gt;</literal> if insert-popup-menu
is visible.</paragraph><paragraph>Otherwise output a <literal>&lt;Tab&gt;</literal></paragraph></list_item><list_item><paragraph>BackSpace: for <reference name="indent" refid="indent">indent</reference>, will goto correct indentation if no preceding non-whitespace character and after the indentation's <literal>&amp;shiftwidth</literal> position ,
otherwise <literal>&lt;BS&gt;</literal></paragraph></list_item></bullet_list></section></section><section ids="for-riv" names="for\ riv"><title>For Riv</title><paragraph>These features are for the Riv Project.</paragraph><section ids="project" names="project"><title>Project</title><paragraph>Manage your reStructuredText documents in a wiki way.</paragraph><bullet_list bullet="*"><list_item><paragraph>By default. the path of project is at '~/Documents/Riv',
you can set it by adding project to <literal>g:riv_projects</literal> in your vimrc.:</paragraph><literal_block xml:space="preserve">let project1 = { 'path': '~/Dropbox/rst',}
let g:riv_projects = [project1]

" You could add multiple projects as well
let project2 = { 'path': '~/Dropbox/rst2',}
let g:riv_projects = [project1, project2]</literal_block></list_item><list_item><paragraph>Use <literal>:RivIndex</literal> <literal>&lt;C-E&gt;ww</literal> to open the project index.</paragraph></list_item><list_item><paragraph>Use <literal>:RivAsk</literal> <literal>&lt;C-E&gt;wa</literal> to choose one project to open.</paragraph></list_item></bullet_list></section><section ids="file" names="file"><title>File</title><paragraph>As reStructuredText haven't define a pattern for local files currently.</paragraph><paragraph><strong>Riv</strong>  provides two kinds of style to determine the local file
in the rst documents.</paragraph><paragraph>The <literal>bare extension style</literal> and <literal>square bracket style</literal></paragraph><bullet_list bullet="*"><list_item><paragraph>You can switch the style with <literal>g:riv_localfile_linktype</literal></paragraph><bullet_list bullet="+"><list_item><paragraph>when set to 1, use <literal>bare extension style</literal>:</paragraph><paragraph>words like <literal>xxx.rst</literal> <literal>xxx.py</literal> <literal>xxx.cpp</literal> will be detected as file link.</paragraph><paragraph>words like <literal>xxx/</literal> will be considered as directory ,
and link to <literal>xxx/index.rst</literal></paragraph><paragraph>words like <literal>/xxxx/xxx.rst</literal> <literal>~/xxx/xxx.rst</literal> <literal>x:/xxx.rst</literal>
will be considered as external file links</paragraph><paragraph>words like <literal>/xxxx/xxx/</literal> <literal>~/xxx/xxx/</literal>
will be considered as external directory links,
and link to the directory.</paragraph><paragraph>You can add other extensions with <literal>g:riv_file_link_ext</literal>.
which default is <literal>vim,cpp,c,py,rb,lua,pl</literal> ,
meaning these files will be recongized.</paragraph></list_item><list_item><paragraph>when set to 2, <literal>square bracket style</literal>:</paragraph><paragraph>words like <literal>[xxx]</literal> <literal>[xxx.vim]</literal> will be detected as file link.</paragraph><paragraph>words like <literal>[xxx/]' will link to ``xxx/index.rst</literal></paragraph><paragraph>words like <literal>[/xxxx/xxx.rst]</literal> <literal>[~/xxx/xxx.rst]</literal>  <literal>[x:/xxx/xxx.rst]</literal>
will be considered as external file links</paragraph><paragraph>words like <literal>[/xxxx/xxx/]</literal> <literal>[~/xxx/xxx/]</literal>
will be considered as external directory links,
and link to the directory.</paragraph></list_item><list_item><paragraph>when set to 0, no local file link.</paragraph></list_item><list_item><paragraph>default is 1.</paragraph></list_item></bullet_list></list_item><list_item><paragraph>When Publish to html, all detected local file link will be converted to an embedded link.</paragraph><block_quote><paragraph>e.g. <reference name="xxx.rst" refuri="xxx.html">xxx.rst</reference><target ids="xxx-rst" names="xxx.rst" refuri="xxx.html"></target> <reference name="xxx.py" refuri="xxx.py">xxx.py</reference><target ids="xxx-py" names="xxx.py" refuri="xxx.py"></target></paragraph></block_quote></list_item><list_item><paragraph>To delete a local file in project.</paragraph><paragraph><literal>:RivDelete</literal> <literal>&lt;C-E&gt;df</literal>
it will also delete all reference to this file in <literal>index.rst</literal> of the directory.</paragraph></list_item></bullet_list></section><section ids="scratch" names="scratch"><title>Scratch</title><paragraph>The scratches is created auto named by date in '%Y-%m-%d' format.
It is a place for writing diary or hold idea and thoughts.</paragraph><paragraph>Scratches will be put in scratch folder in project directory.
You can change it with 'scratch_path' of project setting ,default is 'Scratch':</paragraph><literal_block xml:space="preserve">" Use another directory
let project1.scratch_path = 'Diary'
" Use absolute path, then no todo helper and no converting for it.
let project1.scratch_path = '~/Documents/Diary'</literal_block><bullet_list bullet="*"><list_item><paragraph><literal>:RivScratchCreate</literal> <literal>&lt;C-E&gt;cc</literal>
Create or jump to the scratch of today.</paragraph></list_item><list_item><paragraph><literal>:RivScratchView</literal> <literal>&lt;C-E&gt;cv</literal>
View Scratch index.</paragraph><paragraph>The index is auto created. You can change the month name using
<literal>g:riv_month_names</literal>.</paragraph><paragraph>default is:</paragraph><block_quote><paragraph><literal>January,February,March,April,May,June,July,August,September,October,November,December</literal></paragraph></block_quote></list_item></bullet_list></section><section ids="todos" names="todos"><title>Todos</title><paragraph>Writing and highlighting todo items in reStructuredText documents.
It's not the reStructuredText syntax.
So no highlighting when converted.</paragraph><paragraph>Todo items are todo-box or todo-keywords in bullet/enumerated/field lists.</paragraph><paragraph>Datestamps are supported to show todo items's start/end date.</paragraph><paragraph>The statistics of the todo progress (include child items) will be shown when folded.</paragraph><bullet_list bullet="*"><list_item><paragraph>A Todo item:</paragraph><bullet_list bullet="+"><list_item><paragraph>[ ] This is a todo item of initial state.</paragraph></list_item><list_item><paragraph>[o] This is a todo item that's in progress.</paragraph></list_item><list_item><paragraph>[X] This is a todo item that's finished.</paragraph></list_item></bullet_list></list_item><list_item><paragraph>Datestamps:</paragraph><bullet_list bullet="+"><list_item><paragraph>You can set the todo item timestamp style with 'g:riv_todo_timestamp'</paragraph><bullet_list bullet="-"><list_item><paragraph>when set to 2 , will init with a start datestamp.
and when it's done , will add a finish datestamp.</paragraph><enumerated_list enumtype="arabic" prefix="" suffix="."><list_item><paragraph>[ ] 2012-06-23 This is a todo item with start datestamp</paragraph></list_item><list_item><paragraph>[X] 2012-06-23 ~ 2012-06-23  A todo item with both start and finish datestamp.</paragraph></list_item></enumerated_list></list_item><list_item><paragraph>when set to 1 , no init datestamp ,
will add a finish datestamp when it's done.</paragraph><enumerated_list enumtype="arabic" prefix="" suffix="."><list_item><paragraph>[X] 2012-06-23 This is a todo item with finish datestamp,</paragraph></list_item></enumerated_list></list_item><list_item><paragraph>when set to 0 , no datestamp</paragraph></list_item><list_item><paragraph>Default is 1</paragraph></list_item></bullet_list></list_item></bullet_list></list_item><list_item><paragraph>Keyword groups:</paragraph><bullet_list bullet="+"><list_item><paragraph>FIXED A todo item of FIXME/FIXED keyword.</paragraph></list_item><list_item><paragraph>DONE 2012-06-13 ~ 2012-06-23 A todo item of TODO/DONE keyword.</paragraph></list_item><list_item><paragraph>You can define your own keyword group for todo items with <literal>g:riv_todo_keywords</literal></paragraph><paragraph>each keyword is seperated by ',' , each group is seperated by ';'</paragraph><paragraph>default is <literal>TODO,DONE;FIXME,FIXED;START,PROCESS,STOP</literal>,</paragraph></list_item></bullet_list></list_item><list_item><paragraph>Actions:</paragraph><bullet_list bullet="+"><list_item><paragraph>Use <literal>:RivTodoToggle</literal> or <literal>&lt;C-E&gt;ee</literal> to add or switch the todo status.</paragraph></list_item><list_item><paragraph>Double Click or <literal>&lt;Enter&gt;</literal> in the box/keyword to swith the todo status</paragraph></list_item><list_item><paragraph>Double Click or <literal>&lt;Enter&gt;</literal> or <literal>:RivTodoDate</literal> on a datestamp to change date.</paragraph><paragraph>If you have <reference name="Calendar" refuri="https://github.com/mattn/calendar-vim">Calendar</reference> installed , it will use it to choose date.</paragraph></list_item><list_item><paragraph>Use <literal>:RivTodoType1</literal> <literal>&lt;C-E&gt;e1</literal> ... <literal>:RivTodoType4</literal> <literal>&lt;C-E&gt;e4</literal>
to add or change the todo item by group.</paragraph></list_item><list_item><paragraph>Use <literal>:RivTodoAsk</literal> <literal>&lt;C-E&gt;e`</literal> will show an keyword group list to choose.</paragraph></list_item><list_item><paragraph>Use <literal>:RivTodoDel</literal> <literal>&lt;C-E&gt;ex</literal> will delete the todo item</paragraph></list_item><list_item><paragraph>Use <literal>:RivCreateDate</literal> <literal>&lt;C-E&gt;id</literal> to insert a datestamp of today anywhere.</paragraph></list_item><list_item><paragraph>Use <literal>:RivCreateTime</literal> <literal>&lt;C-E&gt;it</literal> to insert a timestamp of current time anywhere.</paragraph></list_item><list_item><paragraph>Use <literal>:RivTodoHelper</literal> or <literal>&lt;C-E&gt;ht</literal> to open a <reference name="Todo Helper" refid="todo-helper">Todo Helper</reference></paragraph></list_item></bullet_list></list_item></bullet_list></section><section ids="helpers" names="helpers"><title>Helpers</title><paragraph>A window to show something of the project.</paragraph><bullet_list bullet="*"><list_item><paragraph><target ids="todo-helper" names="todo\ helper">Todo Helper</target> : A helper to manage todo items of current project.</paragraph><bullet_list bullet="+"><list_item><paragraph><literal>:RivTodoHelper</literal> or <literal>&lt;C-E&gt;ht</literal>
Open to view all todo-items.
Default is in search mode.</paragraph><bullet_list bullet="-"><list_item><paragraph><literal>/</literal> to search todo item matching inputing, <literal>&lt;Enter&gt;</literal> or <literal>&lt;Esc&gt;</literal> to quit
search mode.</paragraph><paragraph>Set <literal>g:riv_fuzzy_help</literal> to 1 to enable fuzzy searching in helper.</paragraph></list_item><list_item><paragraph><literal>&lt;Tab&gt;</literal> to switch content,
there are 'All/Todo/Done' contents for Todo Helper.</paragraph></list_item><list_item><paragraph><literal>&lt;Enter&gt;</literal> or Double Click to jump to the todo item.</paragraph></list_item><list_item><paragraph><literal>&lt;Esc&gt;</literal> or <literal>q</literal> to quit the window</paragraph></list_item></bullet_list></list_item></bullet_list></list_item></bullet_list></section><section ids="publish" names="publish"><title>Publish</title><paragraph>Some wrapper to convert rst files to html/xml/latex/odt/...
(require python docutils package )</paragraph><field_list><field><field_name>NOTE</field_name><field_body><paragraph>When converting, It will first try <literal>rst2xxxx2.py</literal> , then try <literal>rst2xxxx.py</literal></paragraph><paragraph>You should install the package of python2 version .</paragraph><paragraph>Otherwise errors will occour.</paragraph></field_body></field></field_list><bullet_list bullet="*"><list_item><paragraph><literal>:Riv2HtmlFile</literal>  <literal>&lt;C-E&gt;2hf</literal>
convert to html file.</paragraph></list_item><list_item><paragraph><literal>:Riv2HtmlAndBrowse</literal>  <literal>&lt;C-E&gt;2hh</literal>
convert to html file and browse.
default is 'firefox'</paragraph><paragraph>The browser is set with <literal>g:riv_web_browser</literal></paragraph></list_item><list_item><paragraph><literal>:Riv2HtmlProject</literal> <literal>&lt;C-E&gt;2hp</literal> converting whole project into html.
And all the file with extension in <literal>g:riv_file_link_ext</literal> will be copied there too.</paragraph></list_item></bullet_list><paragraph>Convert to the file and browse.</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>:Riv2Odt</literal> <literal>&lt;C-E&gt;2oo</literal> convert to odt file and browse by ft browser</paragraph><paragraph>The browser is set with <literal>g:riv_ft_browser</literal>.
default is (unix:'xdg-open', windows:'start')</paragraph></list_item><list_item><paragraph><literal>:Riv2Xml</literal> <literal>&lt;C-E&gt;2xx</literal> convert to xml file and browse by web browser</paragraph></list_item><list_item><paragraph><literal>:Riv2S5</literal> <literal>&lt;C-E&gt;2ss</literal> convert to s5 file and browse by web browser</paragraph></list_item><list_item><paragraph><literal>:Riv2Latex</literal> <literal>&lt;C-E&gt;2ll</literal> convert to latex file and edit by gvim</paragraph></list_item><list_item><paragraph>For the files that are in a project.
The path of converted files by default is under <literal>_build</literal> in your project directory.</paragraph><bullet_list bullet="+"><list_item><paragraph>To change the path. Set it in your vimrc:</paragraph><literal_block xml:space="preserve">" Assume you have a project name project 1
let project1.build_path = '~/Documents/Riv_Build'</literal_block></list_item><list_item><paragraph>Open the build path: <literal>:Riv2BuildPath</literal> <literal>&lt;C-E&gt;2b</literal></paragraph></list_item></bullet_list></list_item><list_item><paragraph>For the files that not in a project.
<literal>g:riv_temp_path</literal> is used to determine the output path</paragraph><bullet_list bullet="+"><list_item><paragraph>When it's empty , the converted file is put under the same directory of file ,</paragraph></list_item><list_item><paragraph>Otherwise the converted file is put in the <literal>g:riv_temp_path</literal>,
make sure it's an absolute path.</paragraph></list_item><list_item><paragraph>Also no local file link will be converted.</paragraph></list_item></bullet_list></list_item></bullet_list></section></section></section></document>